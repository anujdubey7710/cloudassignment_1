{"ast":null,"code":"var _jsxFileName = \"/Users/anujdubey/cloudassignment1/src/Register.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst registerUrl = 'https://q3358v04o2.execute-api.us-east-1.amazonaws.com/prod/register';\nconst Register = () => {\n  _s();\n  const [name, setName] = useState('');\n  const [email, setEmail] = useState('');\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n  const [confirmPassword, setConfirmPassword] = useState('');\n  const [errorMessage, setErrorMessage] = useState('');\n  const submitHandler = event => {\n    event.preventDefault();\n    if (!name.trim() || !email.trim() || !username.trim() || !password.trim() || !confirmPassword.trim()) {\n      setErrorMessage('All fields are required');\n      return;\n    }\n    if (password !== confirmPassword) {\n      setErrorMessage('Passwords do not match');\n      return;\n    }\n\n    // Additional validation and API call\n    const requestBody = {\n      name: name,\n      email: email,\n      username: username,\n      password: password\n    };\n    axios.post(registerUrl, requestBody).then(response => {\n      // Handle successful registration\n      console.log(response);\n      // Redirect to login page or show success message\n    }).catch(error => {\n      // Handle registration error\n      // Check if error is due to existing email\n      if (error.response && error.response.status === 409) {\n        setErrorMessage('The email already exists');\n      } else {\n        setErrorMessage('An error occurred during registration');\n      }\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: submitHandler,\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Register\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this), \"Name: \", /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: name,\n        onChange: event => setName(event.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 15\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 97\n      }, this), \"Email: \", /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: email,\n        onChange: event => setEmail(event.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 16\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 100\n      }, this), \"Username: \", /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: username,\n        onChange: event => setUsername(event.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 19\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 109\n      }, this), \"Password: \", /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        value: password,\n        onChange: event => setPassword(event.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 19\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 113\n      }, this), \"Confirm Password: \", /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        value: confirmPassword,\n        onChange: event => setConfirmPassword(event.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 27\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 135\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Register\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this), errorMessage && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"message\",\n      children: errorMessage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 24\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 5\n  }, this);\n};\n_s(Register, \"OKeORHK8C3g/kJ3B8AbiQvyao7k=\");\n_c = Register;\nexport default Register;\nvar _c;\n$RefreshReg$(_c, \"Register\");","map":{"version":3,"names":["React","useState","axios","jsxDEV","_jsxDEV","registerUrl","Register","_s","name","setName","email","setEmail","username","setUsername","password","setPassword","confirmPassword","setConfirmPassword","errorMessage","setErrorMessage","submitHandler","event","preventDefault","trim","requestBody","post","then","response","console","log","catch","error","status","children","onSubmit","fileName","_jsxFileName","lineNumber","columnNumber","type","value","onChange","target","className","_c","$RefreshReg$"],"sources":["/Users/anujdubey/cloudassignment1/src/Register.js"],"sourcesContent":["import React, { useState } from 'react';\nimport axios from 'axios';\n\nconst registerUrl = 'https://q3358v04o2.execute-api.us-east-1.amazonaws.com/prod/register';\n\nconst Register = () => {\n  const [name, setName] = useState('');\n  const [email, setEmail] = useState('');\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n  const [confirmPassword, setConfirmPassword] = useState('');\n  const [errorMessage, setErrorMessage] = useState('');\n\n  const submitHandler = (event) => {\n    event.preventDefault();\n\n    if (!name.trim() || !email.trim() || !username.trim() || !password.trim() || !confirmPassword.trim()) {\n      setErrorMessage('All fields are required');\n      return;\n    }\n\n    if (password !== confirmPassword) {\n      setErrorMessage('Passwords do not match');\n      return;\n    }\n\n    // Additional validation and API call\n    const requestBody = {\n      name: name,\n      email: email,\n      username: username,\n      password: password\n    };\n\n    axios.post(registerUrl, requestBody)\n      .then(response => {\n        // Handle successful registration\n        console.log(response)\n        // Redirect to login page or show success message\n      })\n      .catch(error => {\n        // Handle registration error\n        // Check if error is due to existing email\n        if (error.response && error.response.status === 409) {\n          setErrorMessage('The email already exists');\n        } else {\n          setErrorMessage('An error occurred during registration');\n        }\n      });\n  };\n\n  return (\n    <div>\n      <form onSubmit={submitHandler}>\n        <h1>Register</h1>\n        Name: <input type=\"text\" value={name} onChange={event => setName(event.target.value)} /><br />\n        Email: <input type=\"text\" value={email} onChange={event => setEmail(event.target.value)} /><br />\n        Username: <input type=\"text\" value={username} onChange={event => setUsername(event.target.value)} /><br />\n        Password: <input type=\"password\" value={password} onChange={event => setPassword(event.target.value)} /><br />\n        Confirm Password: <input type=\"password\" value={confirmPassword} onChange={event => setConfirmPassword(event.target.value)} /><br />\n        <button type=\"submit\">Register</button>\n      </form>\n      {errorMessage && <p className=\"message\">{errorMessage}</p>}\n    </div>\n  );\n};\n\nexport default Register;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,MAAMC,WAAW,GAAG,sEAAsE;AAE1F,MAAMC,QAAQ,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACrB,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EACpC,MAAM,CAACS,KAAK,EAAEC,QAAQ,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACW,QAAQ,EAAEC,WAAW,CAAC,GAAGZ,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACa,QAAQ,EAAEC,WAAW,CAAC,GAAGd,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACe,eAAe,EAAEC,kBAAkB,CAAC,GAAGhB,QAAQ,CAAC,EAAE,CAAC;EAC1D,MAAM,CAACiB,YAAY,EAAEC,eAAe,CAAC,GAAGlB,QAAQ,CAAC,EAAE,CAAC;EAEpD,MAAMmB,aAAa,GAAIC,KAAK,IAAK;IAC/BA,KAAK,CAACC,cAAc,CAAC,CAAC;IAEtB,IAAI,CAACd,IAAI,CAACe,IAAI,CAAC,CAAC,IAAI,CAACb,KAAK,CAACa,IAAI,CAAC,CAAC,IAAI,CAACX,QAAQ,CAACW,IAAI,CAAC,CAAC,IAAI,CAACT,QAAQ,CAACS,IAAI,CAAC,CAAC,IAAI,CAACP,eAAe,CAACO,IAAI,CAAC,CAAC,EAAE;MACpGJ,eAAe,CAAC,yBAAyB,CAAC;MAC1C;IACF;IAEA,IAAIL,QAAQ,KAAKE,eAAe,EAAE;MAChCG,eAAe,CAAC,wBAAwB,CAAC;MACzC;IACF;;IAEA;IACA,MAAMK,WAAW,GAAG;MAClBhB,IAAI,EAAEA,IAAI;MACVE,KAAK,EAAEA,KAAK;MACZE,QAAQ,EAAEA,QAAQ;MAClBE,QAAQ,EAAEA;IACZ,CAAC;IAEDZ,KAAK,CAACuB,IAAI,CAACpB,WAAW,EAAEmB,WAAW,CAAC,CACjCE,IAAI,CAACC,QAAQ,IAAI;MAChB;MACAC,OAAO,CAACC,GAAG,CAACF,QAAQ,CAAC;MACrB;IACF,CAAC,CAAC,CACDG,KAAK,CAACC,KAAK,IAAI;MACd;MACA;MACA,IAAIA,KAAK,CAACJ,QAAQ,IAAII,KAAK,CAACJ,QAAQ,CAACK,MAAM,KAAK,GAAG,EAAE;QACnDb,eAAe,CAAC,0BAA0B,CAAC;MAC7C,CAAC,MAAM;QACLA,eAAe,CAAC,uCAAuC,CAAC;MAC1D;IACF,CAAC,CAAC;EACN,CAAC;EAED,oBACEf,OAAA;IAAA6B,QAAA,gBACE7B,OAAA;MAAM8B,QAAQ,EAAEd,aAAc;MAAAa,QAAA,gBAC5B7B,OAAA;QAAA6B,QAAA,EAAI;MAAQ;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,UACX,eAAAlC,OAAA;QAAOmC,IAAI,EAAC,MAAM;QAACC,KAAK,EAAEhC,IAAK;QAACiC,QAAQ,EAAEpB,KAAK,IAAIZ,OAAO,CAACY,KAAK,CAACqB,MAAM,CAACF,KAAK;MAAE;QAAAL,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eAAAlC,OAAA;QAAA+B,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC,WACvF,eAAAlC,OAAA;QAAOmC,IAAI,EAAC,MAAM;QAACC,KAAK,EAAE9B,KAAM;QAAC+B,QAAQ,EAAEpB,KAAK,IAAIV,QAAQ,CAACU,KAAK,CAACqB,MAAM,CAACF,KAAK;MAAE;QAAAL,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eAAAlC,OAAA;QAAA+B,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC,cACvF,eAAAlC,OAAA;QAAOmC,IAAI,EAAC,MAAM;QAACC,KAAK,EAAE5B,QAAS;QAAC6B,QAAQ,EAAEpB,KAAK,IAAIR,WAAW,CAACQ,KAAK,CAACqB,MAAM,CAACF,KAAK;MAAE;QAAAL,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eAAAlC,OAAA;QAAA+B,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC,cAChG,eAAAlC,OAAA;QAAOmC,IAAI,EAAC,UAAU;QAACC,KAAK,EAAE1B,QAAS;QAAC2B,QAAQ,EAAEpB,KAAK,IAAIN,WAAW,CAACM,KAAK,CAACqB,MAAM,CAACF,KAAK;MAAE;QAAAL,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eAAAlC,OAAA;QAAA+B,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC,sBAC5F,eAAAlC,OAAA;QAAOmC,IAAI,EAAC,UAAU;QAACC,KAAK,EAAExB,eAAgB;QAACyB,QAAQ,EAAEpB,KAAK,IAAIJ,kBAAkB,CAACI,KAAK,CAACqB,MAAM,CAACF,KAAK;MAAE;QAAAL,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eAAAlC,OAAA;QAAA+B,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC,eACpIlC,OAAA;QAAQmC,IAAI,EAAC,QAAQ;QAAAN,QAAA,EAAC;MAAQ;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACnC,CAAC,EACNpB,YAAY,iBAAId,OAAA;MAAGuC,SAAS,EAAC,SAAS;MAAAV,QAAA,EAAEf;IAAY;MAAAiB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACvD,CAAC;AAEV,CAAC;AAAC/B,EAAA,CA5DID,QAAQ;AAAAsC,EAAA,GAARtC,QAAQ;AA8Dd,eAAeA,QAAQ;AAAC,IAAAsC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}