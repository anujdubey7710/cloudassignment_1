{"ast":null,"code":"var _jsxFileName = \"/Users/anujdubey/cloudassignment1/src/Register.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport { setUserSession } from './service/AuthService';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst loginAPIUrl = 'https://q3358v04o2.execute-api.us-east-1.amazonaws.com/prod/login';\nconst Login = props => {\n  _s();\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n  const [errorMessage, setErrorMessage] = useState(null);\n  const submitHandler = event => {\n    event.preventDefault();\n    if (username === '' || password === '') {\n      setErrorMessage('Both username and password are required');\n      return;\n    }\n    const requestConfig = {\n      headers: {\n        'x-api-key': 'aWXFB88QHgaTNyCBVkrE91GbEUeeE8Jb50MoKz80'\n      }\n    };\n    const requestBody = {\n      username: username,\n      password: password\n    };\n    console.log('Login button is pressed');\n    axios.post(loginAPIUrl, requestBody, requestConfig).then(response => {\n      setUserSession(response.data.user, response.data.token);\n      props.history.push('/premium-content');\n    }).catch(error => {\n      if (error.response && (error.response.status === 401 || error.response.status === 403)) {\n        setErrorMessage(error.response.data.message);\n      } else {\n        setErrorMessage('Sorry, the backend server is down. Please try again later!!');\n      }\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: submitHandler,\n      children: [\"Username: \", /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: username,\n        onChange: event => setUsername(event.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 19\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 111\n      }, this), \"Password: \", /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        value: password,\n        onChange: event => setPassword(event.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 19\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 115\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"submit\",\n        value: \"Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this), errorMessage && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"message\",\n      children: errorMessage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 24\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 5\n  }, this);\n};\n_s(Login, \"ZoA7LYtb8kO1B5k4NigckvJEwUU=\");\n_c = Login;\nexport default Login;\n\n// import React, { useState } from 'react';\n// import axios from 'axios';\n\n// const registerUrl = 'https://q3358v04o2.execute-api.us-east-1.amazonaws.com/prod/register';\n\n// const Register = () => {\n//   const [name, setName] = useState('');\n//   const [email, setEmail] = useState('');\n//   const [username, setUsername] = useState('');\n//   const [password, setPassword] = useState('');\n//   const [confirmPassword, setConfirmPassword] = useState('');\n//   const [errorMessage, setErrorMessage] = useState('');\n\n//   const submitHandler = (event) => {\n//     event.preventDefault();\n\n//     if (!name.trim() || !email.trim() || !username.trim() || !password.trim() || !confirmPassword.trim()) {\n//       setErrorMessage('All fields are required');\n//       return;\n//     }\n\n//     if (password !== confirmPassword) {\n//       setErrorMessage('Passwords do not match');\n//       return;\n//     }\n\n//     // Additional validation and API call\n//     const requestBody = {\n//       name: name,\n//       email: email,\n//       username: username,\n//       password: password\n//     };\n\n//     axios.post(registerUrl, requestBody)\n//       .then(response => {\n//         // Handle successful registration\n//         // Redirect to login page or show success message\n//       })\n//       .catch(error => {\n//         // Handle registration error\n//         // Check if error is due to existing email\n//         if (error.response && error.response.status === 409) {\n//           setErrorMessage('The email already exists');\n//         } else {\n//           setErrorMessage('An error occurred during registration');\n//         }\n//       });\n//   };\n\n//   return (\n//     <div>\n//       <form onSubmit={submitHandler}>\n//         <h1>Register</h1>\n//         Name: <input type=\"text\" value={name} onChange={event => setName(event.target.value)} /><br />\n//         Email: <input type=\"text\" value={email} onChange={event => setEmail(event.target.value)} /><br />\n//         Username: <input type=\"text\" value={username} onChange={event => setUsername(event.target.value)} /><br />\n//         Password: <input type=\"password\" value={password} onChange={event => setPassword(event.target.value)} /><br />\n//         Confirm Password: <input type=\"password\" value={confirmPassword} onChange={event => setConfirmPassword(event.target.value)} /><br />\n//         <button type=\"submit\">Register</button>\n//       </form>\n//       {errorMessage && <p className=\"message\">{errorMessage}</p>}\n//     </div>\n//   );\n// };\n\n// export default Register;\nvar _c;\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["React","useState","axios","setUserSession","jsxDEV","_jsxDEV","loginAPIUrl","Login","props","_s","username","setUsername","password","setPassword","errorMessage","setErrorMessage","submitHandler","event","preventDefault","requestConfig","headers","requestBody","console","log","post","then","response","data","user","token","history","push","catch","error","status","message","children","onSubmit","type","value","onChange","target","fileName","_jsxFileName","lineNumber","columnNumber","className","_c","$RefreshReg$"],"sources":["/Users/anujdubey/cloudassignment1/src/Register.js"],"sourcesContent":["import React, { useState } from 'react';\nimport axios from 'axios';\nimport { setUserSession } from './service/AuthService';\n\nconst loginAPIUrl = 'https://q3358v04o2.execute-api.us-east-1.amazonaws.com/prod/login';\n\nconst Login = (props) => {\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n  const [errorMessage, setErrorMessage] = useState(null);\n\n  const submitHandler = (event) => {\n    event.preventDefault();\n\n    if (username === '' || password === '') {\n      setErrorMessage('Both username and password are required');\n      return;\n    }\n\n    const requestConfig = {\n      headers: {\n        'x-api-key': 'aWXFB88QHgaTNyCBVkrE91GbEUeeE8Jb50MoKz80'\n      }\n    };\n\n    const requestBody = {\n      username: username,\n      password: password\n    };\n\n    console.log('Login button is pressed');\n\n    axios.post(loginAPIUrl, requestBody, requestConfig)\n      .then((response) => {\n        setUserSession(response.data.user, response.data.token);\n        props.history.push('/premium-content');\n      })\n      .catch((error) => {\n        if (error.response && (error.response.status === 401 || error.response.status === 403)) {\n          setErrorMessage(error.response.data.message);\n        } else {\n          setErrorMessage('Sorry, the backend server is down. Please try again later!!');\n        }\n      });\n  };\n\n  return (\n    <div>\n      <form onSubmit={submitHandler}>\n        Username: <input type=\"text\" value={username} onChange={(event) => setUsername(event.target.value)} /><br />\n        Password: <input type=\"password\" value={password} onChange={(event) => setPassword(event.target.value)} /><br />\n        <input type=\"submit\" value=\"Login\" />\n      </form>\n      {errorMessage && <p className=\"message\">{errorMessage}</p>}\n    </div>\n  );\n};\n\nexport default Login;\n\n\n// import React, { useState } from 'react';\n// import axios from 'axios';\n\n// const registerUrl = 'https://q3358v04o2.execute-api.us-east-1.amazonaws.com/prod/register';\n\n// const Register = () => {\n//   const [name, setName] = useState('');\n//   const [email, setEmail] = useState('');\n//   const [username, setUsername] = useState('');\n//   const [password, setPassword] = useState('');\n//   const [confirmPassword, setConfirmPassword] = useState('');\n//   const [errorMessage, setErrorMessage] = useState('');\n\n//   const submitHandler = (event) => {\n//     event.preventDefault();\n\n//     if (!name.trim() || !email.trim() || !username.trim() || !password.trim() || !confirmPassword.trim()) {\n//       setErrorMessage('All fields are required');\n//       return;\n//     }\n\n//     if (password !== confirmPassword) {\n//       setErrorMessage('Passwords do not match');\n//       return;\n//     }\n\n//     // Additional validation and API call\n//     const requestBody = {\n//       name: name,\n//       email: email,\n//       username: username,\n//       password: password\n//     };\n\n//     axios.post(registerUrl, requestBody)\n//       .then(response => {\n//         // Handle successful registration\n//         // Redirect to login page or show success message\n//       })\n//       .catch(error => {\n//         // Handle registration error\n//         // Check if error is due to existing email\n//         if (error.response && error.response.status === 409) {\n//           setErrorMessage('The email already exists');\n//         } else {\n//           setErrorMessage('An error occurred during registration');\n//         }\n//       });\n//   };\n\n//   return (\n//     <div>\n//       <form onSubmit={submitHandler}>\n//         <h1>Register</h1>\n//         Name: <input type=\"text\" value={name} onChange={event => setName(event.target.value)} /><br />\n//         Email: <input type=\"text\" value={email} onChange={event => setEmail(event.target.value)} /><br />\n//         Username: <input type=\"text\" value={username} onChange={event => setUsername(event.target.value)} /><br />\n//         Password: <input type=\"password\" value={password} onChange={event => setPassword(event.target.value)} /><br />\n//         Confirm Password: <input type=\"password\" value={confirmPassword} onChange={event => setConfirmPassword(event.target.value)} /><br />\n//         <button type=\"submit\">Register</button>\n//       </form>\n//       {errorMessage && <p className=\"message\">{errorMessage}</p>}\n//     </div>\n//   );\n// };\n\n// export default Register;\n\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,KAAK,MAAM,OAAO;AACzB,SAASC,cAAc,QAAQ,uBAAuB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEvD,MAAMC,WAAW,GAAG,mEAAmE;AAEvF,MAAMC,KAAK,GAAIC,KAAK,IAAK;EAAAC,EAAA;EACvB,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACW,QAAQ,EAAEC,WAAW,CAAC,GAAGZ,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACa,YAAY,EAAEC,eAAe,CAAC,GAAGd,QAAQ,CAAC,IAAI,CAAC;EAEtD,MAAMe,aAAa,GAAIC,KAAK,IAAK;IAC/BA,KAAK,CAACC,cAAc,CAAC,CAAC;IAEtB,IAAIR,QAAQ,KAAK,EAAE,IAAIE,QAAQ,KAAK,EAAE,EAAE;MACtCG,eAAe,CAAC,yCAAyC,CAAC;MAC1D;IACF;IAEA,MAAMI,aAAa,GAAG;MACpBC,OAAO,EAAE;QACP,WAAW,EAAE;MACf;IACF,CAAC;IAED,MAAMC,WAAW,GAAG;MAClBX,QAAQ,EAAEA,QAAQ;MAClBE,QAAQ,EAAEA;IACZ,CAAC;IAEDU,OAAO,CAACC,GAAG,CAAC,yBAAyB,CAAC;IAEtCrB,KAAK,CAACsB,IAAI,CAAClB,WAAW,EAAEe,WAAW,EAAEF,aAAa,CAAC,CAChDM,IAAI,CAAEC,QAAQ,IAAK;MAClBvB,cAAc,CAACuB,QAAQ,CAACC,IAAI,CAACC,IAAI,EAAEF,QAAQ,CAACC,IAAI,CAACE,KAAK,CAAC;MACvDrB,KAAK,CAACsB,OAAO,CAACC,IAAI,CAAC,kBAAkB,CAAC;IACxC,CAAC,CAAC,CACDC,KAAK,CAAEC,KAAK,IAAK;MAChB,IAAIA,KAAK,CAACP,QAAQ,KAAKO,KAAK,CAACP,QAAQ,CAACQ,MAAM,KAAK,GAAG,IAAID,KAAK,CAACP,QAAQ,CAACQ,MAAM,KAAK,GAAG,CAAC,EAAE;QACtFnB,eAAe,CAACkB,KAAK,CAACP,QAAQ,CAACC,IAAI,CAACQ,OAAO,CAAC;MAC9C,CAAC,MAAM;QACLpB,eAAe,CAAC,6DAA6D,CAAC;MAChF;IACF,CAAC,CAAC;EACN,CAAC;EAED,oBACEV,OAAA;IAAA+B,QAAA,gBACE/B,OAAA;MAAMgC,QAAQ,EAAErB,aAAc;MAAAoB,QAAA,GAAC,YACnB,eAAA/B,OAAA;QAAOiC,IAAI,EAAC,MAAM;QAACC,KAAK,EAAE7B,QAAS;QAAC8B,QAAQ,EAAGvB,KAAK,IAAKN,WAAW,CAACM,KAAK,CAACwB,MAAM,CAACF,KAAK;MAAE;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eAAAxC,OAAA;QAAAqC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC,cAClG,eAAAxC,OAAA;QAAOiC,IAAI,EAAC,UAAU;QAACC,KAAK,EAAE3B,QAAS;QAAC4B,QAAQ,EAAGvB,KAAK,IAAKJ,WAAW,CAACI,KAAK,CAACwB,MAAM,CAACF,KAAK;MAAE;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eAAAxC,OAAA;QAAAqC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC,eAChHxC,OAAA;QAAOiC,IAAI,EAAC,QAAQ;QAACC,KAAK,EAAC;MAAO;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACjC,CAAC,EACN/B,YAAY,iBAAIT,OAAA;MAAGyC,SAAS,EAAC,SAAS;MAAAV,QAAA,EAAEtB;IAAY;MAAA4B,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACvD,CAAC;AAEV,CAAC;AAACpC,EAAA,CAlDIF,KAAK;AAAAwC,EAAA,GAALxC,KAAK;AAoDX,eAAeA,KAAK;;AAGpB;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AAAA,IAAAwC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}